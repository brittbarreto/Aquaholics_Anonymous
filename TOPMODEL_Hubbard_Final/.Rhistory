lines(fed_flow, col='white')
lines(fed_flow, col='red')
length(Q)
length(hub7_flow)
length(fed_flow)
#hub7_flow<-hub7$flow_mh
#hub7_ETp<-hub7$Etp
z<-hub7 %>%
mutate(Date = mdy(date))
hub7_filter<- z%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-1")
hub7_rain<-hub7_filter$precip_m
hub7_flow<-hub7_filter$flow_mh
hub7_ETp<-hub7_filter$Etp
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
qo<-hub7_sim$qo
qs<-hub7_sim$qs
S<-hub7_sim$S
fex<-hub7_sim$fex
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
plot(Q, type='l', main="June 24 - July 7, 2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(hub7_flow, col='blue')
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
NSeff(hub7_flow, Q)
output_date<- as.data.frame(hub7$date)
output_time<-as.data.frame(hub7$time)
output_observed<-as.data.frame(hub7$flow_mh)
output_Q<-as.data.frame(hub7_sim$Q)
plot(hubbard7_topidx_class)
hubbard7_topidx<-topidx(dem7, 10)$atb
hubbard7_topidx_class<-make.classes(hubbard7_topidx, 14)
hubbard7_topidx_class
hub7<-read.csv("2014_hub7_hourly_data.csv")
z<-hub7 %>%
mutate(Date = mdy(date))
hub7_filter<- z%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-1")
hub7_rain<-hub7_filter$precip_m
hub7_flow<-hub7_filter$flow_mh
hub7_ETp<-hub7_filter$Etp
k<-10
hubbard7_delay_flowlength<-flowlength(dem7)*10
hubbard7_delay_class<-make.classes(hubbard7_delay_flowlength,k)
hubbard7_delay_class
plot(hubbard7_delay_class)
hubbard7_delay_classorder<- hubbard7_delay_class[k:1,]
hubbard7_delay_classorder
hubbard7_delay_classorder[,2] <- c(0, cumsum(hubbard7_delay_classorder[1:(k-1),2]))
hubbard7_delay_classorder
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
qo<-hub7_sim$qo
qs<-hub7_sim$qs
S<-hub7_sim$S
fex<-hub7_sim$fex
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
plot(Q, type='l', main="June 24 - July 7, 2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(hub7_flow, col='blue')
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
output_date<- as.data.frame(hub7$date)
output_time<-as.data.frame(hub7$time)
output_observed<-as.data.frame(hub7$flow_mh)
output_Q<-as.data.frame(hub7_sim$Q)
output_qo<-as.data.frame(hub7_sim$qo)
output_qs<-as.data.frame(hub7_sim$qs)
outputs<-dplyr::bind_cols(output_date, output_time, output_observed, output_Q, output_qo, output_qs)
outputs<-cbind(output_date, output_time, output_observed, output_Q, output_qo, output_qs)
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
qo<-hub7_sim$qo
qs<-hub7_sim$qs
S<-hub7_sim$S
fex<-hub7_sim$fex
output_date<- as.data.frame(hub7$date)
output_time<-as.data.frame(hub7$time)
output_observed<-as.data.frame(hub7$flow_mh)
output_Q<-as.data.frame(hub7_sim$Q)
output_qo<-as.data.frame(hub7_sim$qo)
output_qs<-as.data.frame(hub7_sim$qs)
outputs<-cbind(output_date, output_time, output_observed, output_Q)
library(readxl)
library(topmodel)
library(Hmisc)
library(tiff)
library(raster)
library(rgdal)
library(dplyr)
library(lubridate)
raster<-'hub7_10dem.tif'
dem7 <-raster(raster)
plot(dem7)
dem7 <-as.matrix(dem7)
is.na(dem7)
hubbard7_topidx<-topidx(dem7, 10)$atb
hubbard7_topidx_class<-make.classes(hubbard7_topidx, 14)
hubbard7_topidx_class
plot(hubbard7_topidx_class)
hub7<-read.csv("2014_hub7_hourly_data.csv")
z<-hub7 %>%
mutate(Date = mdy(date))
hub7_filter<- z%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-1")
hub7_rain<-hub7_filter$precip_m
hub7_flow<-hub7_filter$flow_mh
hub7_ETp<-hub7_filter$Etp
k<-10
hubbard7_delay_flowlength<-flowlength(dem7)*10
hubbard7_delay_class<-make.classes(hubbard7_delay_flowlength,k)
hubbard7_delay_class
plot(hubbard7_delay_class)
hubbard7_delay_classorder<- hubbard7_delay_class[k:1,]
hubbard7_delay_classorder
hubbard7_delay_classorder[,2] <- c(0, cumsum(hubbard7_delay_classorder[1:(k-1),2]))
hubbard7_delay_classorder
n <- 1
qs0 <- runif(n, min =  3.926510e-06, max =  3.926510e-06)
lnTe <- runif(n, min = -1.196998e+00, max = -1.196998e+00)
m <- runif(n, min = 2.787428e-02 , max = 2.787428e-02 )
Sr0 <- runif(n, min = 8.382271e-04, max = 8.382271e-04)
Srmax <- runif(n, min = 4.538280e-03, max = 4.538280e-03)
td <- runif(n, min = 1.650550e-01, max = 1.650550e-01)
vch <- runif(n, min = 1.074347e+02, max = 1.074347e+02)
vr <- runif(n, min = 2.012713e+02, max = 2.012713e+02)
k0 <- runif(n, min = 2.101055e-01, max = 2.101055e-01)
CD <- runif(n, min = 4.125508e+00, max = 4.125508e+00)
dt <- 24
parameters <- cbind(qs0,lnTe,m,Sr0,Srmax,td,vch,vr,k0,CD,dt)
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
NSeff(hub7_flow, Q)
fed_data<-read.csv("hub7_20000_1_noDecay_modelOutput.csv")
zz<-fed_data %>%
mutate(Date = mdy(date))
fed_filter<- zz%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-1")
fed_flow<-fed_filter$norm_streamFlow
lines(fed_flow, col='red')
length(fed_flow)
length(Q)
fed_rain<-fed_filter$P
fed_flow<-fed_filter$norm_streamFlow
fed_ETp<-fed_filter$Etp
fed_date<-hub7_filter$date
fed_time<-hub7_filter$time
length(Q)
length(hub7_flow)
length(fed_flow)
length(fed_rain)
length(fed_date)
fed_date
brittany_hub7<-cbind(fed_date, fed_time, fed_rain, fed_flow, Q, hub7_flow)
View(brittany_hub7)
fed_date
view(fed_date)
fed_date<-hub7_filter$Date
length(fed_date)
brittany_hub7<-cbind(fed_date, fed_time, fed_rain, fed_flow, Q, hub7_flow)
View(brittany_hub7)
brittany_hub7<-cbind(fed_rain, fed_flow, Q, hub7_flow)
write.csv(brittany_hub7, "C:/Users/Stefany Baron/Documents/GitHub/Aquaholics_Anonymous/TOPMODEL_Hubbard_Final/brittany_hub7.csv")
hub7<-read.csv("2014_hub7_hourly_data.csv")
z<-hub7 %>%
mutate(Date = mdy(date))
hub7_filter<- z%>%
filter(Date >= "2014-06-24",
Date <= "2014-07-7")
hub7_rain<-hub7_filter$precip_m
hub7_flow<-hub7_filter$flow_mh
hub7_ETp<-hub7_filter$Etp
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
qo<-hub7_sim$qo
qs<-hub7_sim$qs
S<-hub7_sim$S
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(hub7_flow, col='blue')
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
fed_data<-read.csv("hub7_20000_1_noDecay_modelOutput.csv")
zz<-fed_data %>%
mutate(Date = mdy(date))
fed_filter<- zz%>%
filter(Date >= "2014-06-24",
Date <= "2014-07-7")
fed_rain<-fed_filter$P
fed_flow<-fed_filter$norm_streamFlow
fed_ETp<-fed_filter$Etp
fed_date<-hub7_filter$Date
fed_time<-hub7_filter$time
lines(fed_flow, col='red')
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
lines(fed_flow, col='red')
n <- 1
qs0 <- runif(n, min =  3.926510e-06, max =  3.926510e-06)
lnTe <- runif(n, min = -1.196998e+00, max = -1.196998e+00)
m <- runif(n, min = 2.787428e-02 , max = 2.787428e-02 )
Sr0 <- runif(n, min = 8.382271e-04, max = 8.382271e-04)
Srmax <- runif(n, min = 4.538280e-03, max = 4.538280e-03)
td <- runif(n, min = 1.650550e-01, max = 1.650550e-01)
vch <- runif(n, min = 1.074347e+02, max = 1.074347e+02)
vr <- runif(n, min = 2.012713e+02, max = 2.012713e+02)
k0 <- runif(n, min = 2.101055e-01, max = 2.101055e-01)
CD <- runif(n, min = 4.125508e+00, max = 4.125508e+00)
dt <- 24
parameters <- cbind(qs0,lnTe,m,Sr0,Srmax,td,vch,vr,k0,CD,dt)
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
n <- 1
qs0 <- runif(n, min = 0.000004, max = 0.000004)
lnTe <- runif(n, min = -1.8, max = -1.8)
m <- runif(n, min = 0.015, max = 0.015)
Sr0 <- runif(n, min = 0.0001, max = 0.0001)
Srmax <- runif(n, min = 0.003, max = 0.003)
td <- runif(n, min = 0.3, max = 0.3)
vch <- runif(n, min = 100, max = 100)
vr <- runif(n, min = 500, max = 500)
k0 <- runif(n, min = 0.1487, max = 0.1487)
CD <- runif(n, min = 0.428, max = 0.428)
dt <- 24
parameters <- cbind(qs0,lnTe,m,Sr0,Srmax,td,vch,vr,k0,CD,dt)
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
lines(Q, col='red')
lines(Q, col='blue')
NSeff(hub7_flow, Q)
fed_rain<-fed_filter$P
fed_flow<-fed_filter$norm_streamFlow
fed_ETp<-fed_filter$Etp
fed_date<-hub7_filter$Date
fed_time<-hub7_filter$time
lines(fed_flow, col='red')
length(Q)
length(hub7_flow)
length(fed_flow)
brittany_hub7<-cbind(fed_rain, fed_flow, Q, hub7_flow)
write.csv(brittany_hub7, "C:/Users/Stefany Baron/Documents/GitHub/Aquaholics_Anonymous/TOPMODEL_Hubbard_Final/brittany_hub7.csv")
brittany_hub7<-cbind(fed_rain, fed_flow, Q, hub7_flow)
View(brittany_hub7)
write.csv(brittany_hub7, "C:/Users/Stefany Baron/Documents/GitHub/Aquaholics_Anonymous/TOPMODEL_Hubbard_Final/brittany_hub7.csv")
write.csv(brittany_hub7, "C:/Users/Stefany Baron/Documents/GitHub/quaholics_Anonymous/TOPMODEL_Hubbard_Final/brittany.csv")
write.csv(brittany_hub7, "C:/Users/Stefany Baron/Documents/GitHub/Aquaholics_Anonymous/TOPMODEL_Hubbard/file_for_brittany.csv")
write.csv(brittany_hub7, "C:/Users/Stefany Baron/Documents/GitHub/Aquaholics_Anonymous/TOPMODEL_Hubbard_Final/file_for_brittany.csv")
hub7_filter<- z%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-25")
hub7_rain<-hub7_filter$precip_m
hub7_flow<-hub7_filter$flow_mh
hub7_ETp<-hub7_filter$Etp
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
fed_filter<- zz%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-25")
fed_rain<-fed_filter$P
fed_flow<-fed_filter$norm_streamFlow
fed_ETp<-fed_filter$Etp
fed_date<-hub7_filter$Date
fed_time<-hub7_filter$time
lines(fed_flow, col='red')
length(Q)
length(hub7_flow)
length(fed_flow)
brittany_hub7<-cbind(fed_rain, fed_flow, Q, hub7_flow)
fed_filter<- zz%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-25")
fed_rain<-fed_filter$P
fed_flow<-fed_filter$norm_streamFlow
fed_ETp<-fed_filter$Etp
fed_date<-hub7_filter$Date
fed_time<-hub7_filter$time
lines(fed_flow, col='red')
length(Q)
length(hub7_flow)
length(fed_flow)
fed_filter<- zz%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-1")
fed_rain<-fed_filter$P
fed_flow<-fed_filter$norm_streamFlow
fed_ETp<-fed_filter$Etp
fed_date<-hub7_filter$Date
fed_time<-hub7_filter$time
length(Q)
length(hub7_flow)
length(fed_flow)
hub7_filter<- z%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-1")
hub7_rain<-hub7_filter$precip_m
hub7_flow<-hub7_filter$flow_mh
hub7_ETp<-hub7_filter$Etp
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
fed_filter<- zz%>%
filter(Date >= "2014-05-1",
Date <= "2014-10-1")
fed_rain<-fed_filter$P
fed_flow<-fed_filter$norm_streamFlow
fed_ETp<-fed_filter$Etp
fed_date<-hub7_filter$Date
fed_time<-hub7_filter$time
lines(fed_flow, col='red')
length(Q)
length(hub7_flow)
length(fed_flow)
brittany_hub7<-cbind(fed_rain, fed_flow, Q, hub7_flow)
write.csv(brittany_hub7, "C:/Users/Stefany Baron/Documents/GitHub/Aquaholics_Anonymous/TOPMODEL_Hubbard_Final/file_for_brittany.csv")
plot(hubbard7_topidx_class)
hub7<-read.csv("2014_hub7_hourly_data.csv")
z<-hub7 %>%
mutate(Date = mdy(date))
library(readxl)
library(topmodel)
library(Hmisc)
library(tiff)
library(raster)
library(rgdal)
library(dplyr)
library(lubridate)
raster<-'hub7_10dem.tif'
dem7 <-raster(raster)
plot(dem7)
dem7 <-as.matrix(dem7)
is.na(dem7)
hubbard7_topidx<-topidx(dem7, 10)$atb
hubbard7_topidx_class<-make.classes(hubbard7_topidx, 14)
hubbard7_topidx_class
plot(hubbard7_topidx_class)
hub7<-read.csv("2014_hub7_hourly_data.csv")
z<-hub7 %>%
mutate(Date = mdy(date))
hub7_filter<- z%>%
filter(Date >= "2014-06-24",
Date <= "2014-07-7")
hub7_rain<-hub7_filter$precip_m
hub7_flow<-hub7_filter$flow_mh
hub7_ETp<-hub7_filter$Etp
k<-10
hubbard7_delay_flowlength<-flowlength(dem7)*10
hubbard7_delay_class<-make.classes(hubbard7_delay_flowlength,k)
hubbard7_delay_class
plot(hubbard7_delay_class)
hubbard7_delay_classorder<- hubbard7_delay_class[k:1,]
hubbard7_delay_classorder
hubbard7_delay_classorder[,2] <- c(0, cumsum(hubbard7_delay_classorder[1:(k-1),2]))
hubbard7_delay_classorder
n <- 1
qs0 <- runif(n, min = 0.000004, max = 0.000004)
lnTe <- runif(n, min = -1.8, max = -1.8)
m <- runif(n, min = 0.015, max = 0.015)
Sr0 <- runif(n, min = 0.0001, max = 0.0001)
Srmax <- runif(n, min = 0.003, max = 0.003)
td <- runif(n, min = 0.3, max = 0.3)
vch <- runif(n, min = 100, max = 100)
vr <- runif(n, min = 500, max = 500)
k0 <- runif(n, min = 0.1487, max = 0.1487)
CD <- runif(n, min = 0.428, max = 0.428)
dt <- 24
parameters <- cbind(qs0,lnTe,m,Sr0,Srmax,td,vch,vr,k0,CD,dt)
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
qo<-hub7_sim$qo
qs<-hub7_sim$qs
S<-hub7_sim$S
fex<-hub7_sim$fex
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
plot(Q, type='l', main="June 24 - July 7, 2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(hub7_flow, col='blue')
NSeff(hub7_flow, Q)
fed_data<-read.csv("hub7_20000_1_decay0.015_modelOutput.csv")
zz<-fed_data %>%
mutate(Date = mdy(date))
fed_filter<- zz%>%
filter(Date >= "2014-06-24",
Date <= "2014-07-7")
fed_rain<-fed_filter$P
fed_flow<-fed_filter$norm_streamFlow
fed_ETp<-fed_filter$Etp
fed_date<-hub7_filter$Date
fed_time<-hub7_filter$time
lines(fed_flow, col='red')
lines(fed_flow/1000, col='red')
plot(fed_flow)
View(fed_data)
View(fed_filter)
fed_rain<-fed_filter$P
fed_flow<-fed_filter$norm_streamFlow
fed_ETp<-fed_filter$Etp
fed_date<-hub7_filter$Date
fed_time<-hub7_filter$time
plot(fed_flow)
length(fed_flow)
fed_rain<-fed_filter$P
fed_flow<-fed_filter$model_mmhr
plot(fed_flow)
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
lines(fed_flow*1000, col='red')
plot(fed_flow)
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
lines(fed_flow/1000, col='red')
obs_flow <- function(i) {
j <- hub7_flow[i]
return(j)
}
obs_flow(50)
obs_vol<-integrate(obs_flow, 30, 75)
sim_flow<- function(s) {
t<-Q[s]
return(t)
}
obs_vol<-integrate(obs_flow, 40, 100)
sim_flow<- function(s) {
t<-Q[s]
return(t)
}
sim_flow(65)
sim_vol<-integrate(sim_flow, 40, 100)
(obs_vol$value-sim_vol$value)/obs_vol$value
alt_flow<- function(s) {
t<-fed_flow[s]
return(t)
}
alt_vol<-integrate(alt_flow, 40, 100)
alt_vol<-integrate(alt_flow, 40, 90)
alt_vol<-integrate(alt_flow, 40, 80)
alt_flow(50)
sim_flow(50)
alt_flow<- function(s) {
t<-fed_flow[s]/1000
return(t)
}
alt_flow(50)
alt_vol<-integrate(alt_flow, 40, 100)
(obs_vol$value-sim_vol$value)/obs_vol$value
(obs_vol$value-alt_vol$value)/obs_vol$value
obs_vol<-integrate(obs_flow, 40, 100)
sim_vol<-integrate(sim_flow, 40, 100)
alt_vol<-integrate(alt_flow, 40, 100)
(obs_vol$value-sim_vol$value)/obs_vol$value
(obs_vol$value-alt_vol$value)/obs_vol$value
hub7_filter<- z%>%
filter(Date >= "2014-06-1",
Date <= "2014-09-1")
hub7_rain<-hub7_filter$precip_m
hub7_flow<-hub7_filter$flow_mh
hub7_ETp<-hub7_filter$Etp
hub7_sim<-topmodel(parameters, hubbard7_topidx_class, hubbard7_delay_classorder, hub7_rain, hub7_ETp, TRUE)
Q<-hub7_sim$Q
qo<-hub7_sim$qo
qs<-hub7_sim$qs
S<-hub7_sim$S
fex<-hub7_sim$fex
plot(hub7_flow, type='l', main="2014 Hubbard Creek Subcatchment 7", xlab="Hours", ylab="Normalized Flow")
lines(Q, col='blue')
NSeff(hub7_flow, Q)
fed_data<-read.csv("hub7_20000_1_decay0.015_modelOutput.csv")
zz<-fed_data %>%
mutate(Date = mdy(date))
fed_filter<- zz%>%
filter(Date >= "2014-06-1",
Date <= "2014-09-1")
fed_rain<-fed_filter$P
fed_flow<-fed_filter$model_mmhr
#fed_ETp<-fed_filter$
fed_date<-hub7_filter$Date
fed_time<-hub7_filter$time
lines(fed_flow/1000, col='red')
obs_flow <- function(i) {
j <- hub7_flow[i]
return(j)
}
obs_vol<-integrate(obs_flow, 40, 100)
obs_vol<-integrate(obs_flow, 500, 750)
obs_vol<-integrate(obs_flow, 550, 750)
obs_vol<-integrate(obs_flow, 550, 700)
obs_vol<-integrate(obs_flow, 600, 700)
obs_vol<-integrate(obs_flow, 600, 680)
obs_vol<-integrate(obs_flow, 610, 680)
sim_flow<- function(s) {
t<-Q[s]
return(t)
}
sim_vol<-integrate(sim_flow, 610, 680)
alt_flow<- function(s) {
t<-fed_flow[s]/1000
return(t)
}
alt_vol<-integrate(alt_flow, 610, 680)
(obs_vol$value-sim_vol$value)/obs_vol$value
(obs_vol$value-alt_vol$value)/obs_vol$value
